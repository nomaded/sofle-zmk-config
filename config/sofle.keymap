// -*- mode: c++ -*-
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/ext_power.h>

// Adding support for urob's zmk-helpers
#include "zmk-helpers/helper.h"
// Source desired key-position labels
#include "zmk-helpers/key-labels/sofle.h"

// Each layer gets a name for readability, which is then used in the keymap
// matrix below. The underscores don't mean anything - you can have a layer
// called STUFF or any other name. Layer names don't all need to be of the
// same length, obviously, and you can also skip them entirely and just use
// numbers.
#define _DVORAK 0
#define _QWERTY 1
#define _PUNCT_DV 2
#define _PUNCT_QW 3
#define _NAV_DV 4
#define _NAV_QW 5
#define _RESET_NUM 6

// Helpful defines
// Layer-related
#define TOG_RST &tog _RESET_NUM
#define TOG_QW &tog _QWERTY
#define SL_NAVD &sl _NAV_DV     // Sticky layer DV Nav layer
#define SL_NAVQ &sl _NAV_QW     // Sticky layer QW Nav layer
#define SL_PUND &sl _PUNCT_DV   // Sticky layer DV Punct layer
#define SL_PUNQ &sl _PUNCT_QW   // Sticky layer DV Punct layer
#define MO_NAVD &mo _NAV_DV     // Momentary DV Nav layer
#define MO_NAVQ &mo _NAV_QW     // Momentary QW Nav layer
#define MO_PUND &sl _PUNCT_DV   // Momentary DV Punct layer
#define MO_PUNQ &sl _PUNCT_QW   // Momentary QW Punct layer
#define TD_RST &td_rst          // Tap dance Reset/Num layer
#define TD_QW &td_qw            // Tap dance Qwerty layer
#define TD_LLYD &td_llyd        // Tap dance Left Hand DV layer
#define TD_RLYD &td_rlyd        // Tap dance Right Hand DV layer
#define TD_LLYQ &td_llyq        // Tap dance Left Hand QW layer
#define TD_RLYQ &td_rlyq        // Tap dance Right Hand QW layer

// Modifier-related
#define CTL_ESC &bhm LCTL ESC
#define GUI_ENT &bhm LGUI ENTER
#define CTL_TAB &bhm LCTL TAB
#define CTL_DEL &bhm LCTL DEL
#define LSFT_SC &bhm LSFT SEMI
#define LALT__Q &bhm LALT Q
#define LCTL__J &bhm LCTL J
#define LGUI__K &bhm LGUI K
#define RGUI__M &bhm RGUI M
#define RCTL__W &bhm RCTL W
#define LALT__V &bhm LALT V
#define RSFT__Z &bhm RSFT Z
#define LSFT__Z &bhm LSFT Z
#define LALT__X &bhm LALT X
#define LCTL__C &bhm LCTL C
#define LGUI__V &bhm LGUI V
#define RGUI__M &bhm RGUI M
#define RCTL_CM &bhm RCTL COMMA
#define LALT_DT &bhm LALT DOT
#define RSFT_SH &bhm RSFT FSLH

// Time (ms) before sticky layer is released
// matches QMK setting
&sl {
    release-after-ms = <1500>;
};

// Change behavior of caps_word to stop on modifier by setting
// ignore-modifiers to false using /delete-property/
// See: https://github.com/zmkfirmware/zmk/issues/1410
&caps_word {
    /delete-property/ ignore-modifiers;
    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
};

/ {
    behaviors {
        bhm: below_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "BELOW_HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            bindings = <&kp>, <&kp>;
        };
        td_rst: tap_dance_reset_num_layer {
            // Using tap-dance to require 3 taps to get to _RESET_NUM layer.
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&none>, <&none>, <&tog _RESET_NUM>;
        };
        td_qw: tap_dance_qwerty_layer {
            // Using tap-dance to require 3 taps to get to _QWERTY layer.
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&none>, <&none>, <&tog _QWERTY>;
        };
        td_llyd: tap_dance_left_layer_dv {
            // Using tap-dance to get other layers with same key.
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <350>;
            bindings = <&sl _NAV_DV>, <&sl _PUNCT_DV>, <&mo _NAV_DV>;
        };
        td_rlyd: tap_dance_right_layer_dv {
            // Using tap-dance to get other layers with same key.
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <350>;
            bindings = <&sl _PUNCT_DV>, <&sl _NAV_DV>, <&mo _PUNCT_DV>;
        };
        td_llyq: tap_dance_left_layer_qw {
            // Using tap-dance to get other layers with same key.
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <350>;
            bindings = <&sl _NAV_QW>, <&sl _PUNCT_QW>, <&mo _NAV_QW>;
        };
        td_rlyq: tap_dance_right_layer_qw {
            // Using tap-dance to get other layers with same key.
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <350>;
            bindings = <&sl _PUNCT_QW>, <&sl _NAV_QW>, <&mo _PUNCT_QW>;
        };
    };

    combos {
        compatible = "zmk,combos";
        caplk: combo_capslock {
            timeout-ms = <150>;
            //key-positions = <36 49>;
            key-positions = <36 49>; // combo of lshift and rshift for capslock, using key-labels
            bindings = <&kp CAPSLOCK>;
        };
        capwd: combo_capsword {
            timeout-ms = <150>;
            //key-positions = <19 24>;
            //key-positions = <20 23>; // combo of Y and F for caps_word
            //key-positions = <18 25>; // combo of DOT and C for caps_word
            //key-positions = <24 35>; // combo of CTL_ESC and MINUS for caps_word
            key-positions = <LM5 RM5>; // combo of CTL_ESC and MINUS for caps_word, using key-labels
            bindings = <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        dvorak {
            display-name = "dvorak";
//
// default, dvorak in keyboard, qwerty in OS
// ,-----------------------------------------.                ,-----------------------------------------.
// | LAlt | 1 !  | 2 @  | 3 #  | 4 $  | 5 %  |                | 6 ^  | 7 &  | 8 *  | 9 (  | 0 )  | = +  |
// |------+------+------+------+------+------|                |------+------+------+------+------+------|
// | Tab  | ' "  | , <  | . >  | p P  | y Y  |                | f F  | g G  | c C  | r R  | l L  | / ?  |
// |------+------+------+------+------+------|                | -----+------+------+------+------+------|
// | C_Esc| a A  | o O  | e E  | u U  | i I  |                | d D  | h H  | t T  | n N  | s S  | - _  |
// |------+------+------+------+------+------+------.  ,------+------+------+------+------+------+------|
// | LShft| ; :  | q Q  | j J  | k K  | x X  | G_Ent|  | Pl/Pa| b B  | m M  | w W  | v V  | z Z  | RShft|
// `-------------+------+------+------+------+------|  |------+------+------+------+------+------+------'
//               |td_rst|      | BkSp |slnavd| C_Tab|  | G_Ent|slpund| Space|      | td_qw|
//               `----------------------------------'  `----------------------------------'
            bindings = <
// 0      1        2          3        4         5                           6        7          8        9        10       11
// LN5    LN4      LN3        LN2      LN1       LN0                         RN0      RN1        RN2      RN3      RN4      RN5
&sk LALT  &kp N1   &kp N2     &kp N3   &kp N4    &kp N5                      &kp N6   &kp N7     &kp N8   &kp N9   &kp N0   &kp EQUAL
// 12     13       14         15       16        17                          18       19         20       21       22       23
// LT5    LT4      LT3        LT2      LT1       LT0                         RT0      RT1        RT2      RT3      RT4      RT5
&kp TAB   &kp SQT  &kp COMMA  &kp DOT  &kp P     &kp Y                       &kp F    &kp G      &kp C    &kp R    &kp L    &kp FSLH
// 24     25       26         27       28        29                          30       31         32       33       34       35
// LM5    LM4      LM3        LM2      LM1       LM0                         RM0      RM1        RM2      RM3      RM4      RM5
CTL_ESC   &kp A    &kp O      &kp E    &kp U     &kp I                       &kp D    &kp H      &kp T    &kp N    &kp S    &kp MINUS
// 36     37       38         39       40        41       42       43        44       45         46       47       48       49
// LB5    LB4      LB3        LB2      LB1       LB0      LEC      REC       RB0      RB1        RB2      RB3      RB4      RB5
&kp LSFT  LSFT_SC  LALT__Q    LCTL__J  LGUI__K   &kp X    GUI_ENT  &kp C_PP  &kp B    RGUI__M    RCTL__W  LALT__V  RSFT__Z  &kp RSFT
//                 50         51       52        53       54       55        56       57         58       59
//                 LH4        LH3      LH2       LH1      LH0      RH0       RH1      RH2        RH3      RH4
                   TD_RST     &none    &kp BKSP  TD_LLYD  CTL_TAB  GUI_ENT   TD_RLYD  &kp SPACE  &none    TD_QW
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        qwerty {
            display-name = "qwerty";
//
// qwerty in keyboard, dvorak in OS
// ,-----------------------------------------.                ,-----------------------------------------.
// | LAlt | 1 !  | 2 @  | 3 #  | 4 $  | 5 %  |                | 6 ^  | 7 &  | 8 *  | 9 (  | 0 )  | = +  |
// |------+------+------+------+------+------|                |------+------+------+------+------+------|
// | Tab  | q Q  | w W  | e E  | r R  | t T  |                | y Y  | u U  | i I  | o O  | p P  | [ {  |
// |------+------+------+------+------+------|                | -----+------+------+------+------+------|
// | C_Esc| a A  | s S  | d D  | f F  | g G  |                | h H  | j J  | k K  | l L  | ; :  | ' "  |
// |------+------+------+------+------+------+------.  ,------+------+------+------+------+------+------|
// | LShft| z Z  | x X  | c C  | v V  | b B  | G_Ent|  | Pl/Pa| n N  | m M  | , <  | . >  | / ?  | RShft|
// `-------------+------+------+------+------+------|  |------+------+------+------+------+------+------'
//               |      |      | BkSp |slnavq| C_Tab|  | G_Ent|slpunq| Space|      | td_qw|
//               `----------------------------------'  `----------------------------------'
            bindings = <
&trans  &trans   &trans   &trans   &trans    &trans                     &trans  &trans     &trans   &trans   &trans    &kp RBRC
&trans  &kp Q    &kp W    &kp E    &kp R     &kp T                      &kp Y   &kp U      &kp I    &kp O    &kp P     &kp LBRC
&trans  &kp A    &kp S    &kp D    &kp F     &kp G                      &kp H   &kp J      &kp K    &kp L    &kp SEMI  &kp SQT
&trans  LSFT__Z  LALT__X  LCTL__C  LGUI__V   &kp B    &trans   &trans   &kp N   RGUI__M    RCTL_CM  LALT_DT  RSFT_SH   &kp RSFT
                 &none    &none    &trans    TD_LLYQ  &trans   &trans   TD_RLYQ &trans     &none    TD_QW
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        punct_dv {
            display-name = "punct_dv";
//
// punctpad, dvorak in keyboard, qwerty in OS
// ,-----------------------------------------.                ,-----------------------------------------.
// |      | F1   | F2   | F3   | F4   | F5   |                | F6   | F7   | F8   | F9   | F10  | F11  |
// |------+------+------+------+------+------|                |------+------+------+------+------+------|
// |      |      |      |      |      |      |                | `    | [    | ]    | {    | }    | F12  |
// |------+------+------+------+------+------|                | -----+------+------+------+------+------|
// | C_Esc|      |      |      |      | \    |                | /    | -    | _    | (    | )    | C_Esc|
// |------+------+------+------+------+------+------.  ,------+------+------+------+------+------+------|
// | LShft| Undo | Cut  | Copy | Paste|      | \    |  | /    | ~    | =    | +    | |    | ?    | RShft|
// `-------------+------+------+------+------+------|  |------+------+------+------+------+------+------'
//               |      |      | Del  |monavd| G_Ent|  | C_Tab|slnavd| Space|      |      |
//               `----------------------------------'  `----------------------------------'
            bindings = <
&none   &kp F1     &kp F2     &kp F3     &kp F4     &kp F5                      &kp F6     &kp F7     &kp F8     &kp F9    &kp F10    &kp F11
&none   &none      &none      &none      &none      &none                       &kp GRAVE  &kp LBKT   &kp RBKT   &kp LBRC  &kp RBRC   &kp F12
&trans  &none      &none      &none      &none      &kp BSLH                    &kp FSLH   &kp MINUS  &kp UNDER  &kp LPAR  &kp RPAR   CTL_ESC
&trans  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &none     &trans   &trans   &kp TILDE  &kp EQUAL  &kp PLUS   &kp PLUS  &kp QMARK  &trans
                   &none      &none      &kp DEL    TD_LLYD   GUI_ENT  CTL_TAB  TD_RLYD    &kp SPC    &none      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        punct_qw {
            display-name = "punct_qw";
//
// punctpad, qwerty in keyboard, dvorak in OS
// ,-----------------------------------------.                ,-----------------------------------------.
// |      | F1   | F2   | F3   | F4   | F5   |                | F6   | F7   | F8   | F9   | F10  | F11  |
// |------+------+------+------+------+------|                |------+------+------+------+------+------|
// |      |      |      |      |      |      |                | `    | -    | =    | _    | +    | F12  |
// |------+------+------+------+------+------|                | -----+------+------+------+------+------|
// | C_Esc|      |      |      |      | \    |                | [    | '    | "    | (    | )    | C_Esc|
// |------+------+------+------+------+------+------.  ,------+------+------+------+------+------+------|
// | LShft| Undo | Cut  | Copy | Paste|      | \    |  | [    | ~    | ]    | }    | |    | {    | RShft|
// `-------------+------+------+------+------+------|  |------+------+------+------+------+------+------'
//               |      |      | Del  |monavq| G_Ent|  | C_Tab|slnavq| Space|      |      |
//               `----------------------------------'  `----------------------------------'
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                     &trans    &trans     &trans     &trans     &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans                     &trans    &kp MINUS  &kp EQUAL  &kp UNDER  &kp PLUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans                     &kp LBKT  &kp SQT    &kp DQT    &kp LPAR   &kp RPAR  &trans
&trans  &trans  &trans  &trans  &trans  &trans   &trans  &kp LBKT  &trans    &kp RBKT   &kp RBRC   &trans     &kp LBRC  &trans
                &none   &none   &trans  TD_LLYQ  &trans  &trans    TD_RLYQ   &kp SPC    &none      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        nav_dv {
            display-name = "nav_dv";
//
// nav, dvorak in keyboard, qwerty in OS
// ,-----------------------------------------.                ,-----------------------------------------.
// |      | F1   | F2   | F3   | F4   | F5   |                | F6   | F7   | F8   | F9   | F10  | F11  |
// |------+------+------+------+------+------|                |------+------+------+------+------+------|
// |      |C(Hom)|      | Up   | PgUp |C(End)|                |      | Prev |Vol Dn|Vol Up| Next | F12  |
// |------+------+------+------+------+------|                | -----+------+------+------+------+------|
// | C_Esc| Home | Left | Down | Right| End  |                |      | Left | Down | Up   | Right| C_Esc|
// |------+------+------+------+------+------+------.  ,------+------+------+------+------+------+------|
// | LShft|      |      | Down | PgDn | Del  | Mute |  | Pl/Pa|      | Pl/Pa| Mute | Eject|      | RShft|
// `-------------+------+------+------+------+------|  |------+------+------+------+------+------+------'
//               |      |      | Space|slpund| G_Ent|  | C_Del|mopund| BkSp |      |      |
//               `----------------------------------'  `----------------------------------'
            bindings = <
&none   &kp F1        &kp F2    &kp F3    &kp F4     &kp F5                             &kp F6   &kp F7      &kp F8        &kp F9        &kp F10     &kp F11
&none   &kp LC(HOME)  &none     &kp UP    &kp PG_UP  &kp LC(END)                        &none    &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &kp F12
&trans  &kp HOME      &kp LEFT  &kp DOWN  &kp RIGHT  &kp END                            &none    &kp LEFT    &kp DOWN      &kp UP        &kp RIGHT   &trans
&trans  &none         &none     &kp DOWN  &kp PG_DN  &kp DEL      &kp C_MUTE  &kp C_PP  &none    &kp C_PP    &kp C_MUTE    &kp C_EJECT   &none       &trans
                      &none     &none     &kp SPACE  TD_LLYD      GUI_ENT     CTL_DEL   TD_RLYD  &kp BSPC    &none         &none
           >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        nav_qw {
            display-name = "nav_qw";
//
// nav, qwerty in keyboard, dvorak in OS
// ,-----------------------------------------.                ,-----------------------------------------.
// |      | F1   | F2   | F3   | F4   | F5   |                | F6   | F7   | F8   | F9   | F10  | F11  |
// |------+------+------+------+------+------|                |------+------+------+------+------+------|
// |      |C(Hom)|      | Up   | PgUp |C(End)|                |      | Prev |Vol Dn|Vol Up| Next | F12  |
// |------+------+------+------+------+------|                | -----+------+------+------+------+------|
// | C_Esc| Home | Left | Down | Right| End  |                |      | Left | Down | Up   | Right| C_Esc|
// |------+------+------+------+------+------+------.  ,------+------+------+------+------+------+------|
// | LShft|      |      | Down | PgDn | Del  | Mute |  | Pl/Pa|      | Pl/Pa| Mute | Eject|      | RShft|
// `-------------+------+------+------+------+------|  |------+------+------+------+------+------+------'
//               |      |      | Space|slpunq| G_Ent|  | C_Del|mopunq| BkSp |      |      |
//               `----------------------------------'  `----------------------------------'
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                   &trans   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                   &trans   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                   &trans   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  TD_LLYQ  &trans  &trans  TD_RLYQ  &trans  &trans  &trans
           >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        reset_numpad {
            display-name = "reset_numpad";
//
// reset, and numpad
// ,-----------------------------------------.                ,-----------------------------------------.
// | BtClr| BtSl0| BtSl1| BtSl2| BtSl3| BtSl4|                |      | NmLk | Np / | Np * | Np - | ScrLk|
// |------+------+------+------+------+------|                |------+------+------+------+------+------|
// |      |RgbHud|RgbHui|RgbSad|RgbSai|RgbEff|                |      | Np 7 | Np 8 | Np 9 | Np + |PrtScn|
// |------+------+------+------+------+------|                | -----+------+------+------+------+------|
// |ExtPwr|RgbBrd|RgbBri|RgbSpd|RgbSpi|RgbEfr|                |      | Np 4 | Np 5 | Np 6 | Np = | Pause|
// |------+------+------+------+------+------+------.  ,------+------+------+------+------+------+------|
// | Reset|      |      |      |      |      |SftOff|  |SftOff| Np 0 | Np 1 | Np 2 | Np 3 | Np . | Reset|
// `-------------+------+------+------+------+------|  |------+------+------+------+------+------+------'
//               |td_rst|      |      |      |RgbTog|  | NpEnt| Np 0 | Space|      |      |
//               `----------------------------------'  `----------------------------------'
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                                    &none      &kp KP_NLCK  &kp KP_SLASH  &kp KP_ASTERISK  &kp KP_MINUS  &kp SLCK
&none              &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                                 &none      &kp KP_N7    &kp KP_N8     &kp KP_N9        &kp KP_PLUS   &kp PSCRN
&ext_power EP_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &rgb_ug RGB_EFR                                 &none      &kp KP_N4    &kp KP_N5     &kp KP_N6        &kp KP_EQUAL  &kp PAUSE_BREAK
&bootloader        &none            &none            &none            &none            &none            &soft_off        &soft_off     &kp KP_N0  &kp KP_N1    &kp KP_N2     &kp KP_N3        &kp KP_DOT    &bootloader
                                    TD_RST           &none            &none            &none            &rgb_ug RGB_TOG  &kp KP_ENTER  &kp KP_N0  &kp BSPC     &none         &none
            >;
        };
/* default sofle keymap

        default_layer {
            display-name = "default";
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp GRAVE &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                           &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &none
&kp ESC   &kp Q  &kp W    &kp E    &kp R     &kp T                            &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp TAB   &kp A  &kp S    &kp D    &kp F     &kp G                            &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X    &kp C    &kp V     &kp B      &kp C_MUTE &none      &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp LGUI &kp LALT &kp LCTRL &mo LOWER  &kp RET    &kp SPACE  &mo RAISE  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            display-name = "lower";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8    &kp F9    &kp F10   &kp F11
&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8    &kp N9    &kp N0    &kp F12
&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR  &kp PIPE
&trans    &kp EQUAL &kp MINUS &kp PLUS &kp LBRC  &kp RBRC   &trans &trans  &kp LBKT  &kp RBKT &kp SEMI  &kp COLON &kp BSLH  &trans
                    &trans    &trans      &trans    &trans     &trans &trans  &trans    &trans   &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "raise";
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//                |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                  &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                        &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                      &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans        &trans  &trans  &trans    &trans    &trans   &trans    &trans  &trans
                        &trans       &trans       &trans       &trans        &trans  &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
// | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
// |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
// |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            display-name = "adjust";
            bindings = <
&bt BT_CLR        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                            &none &none &none &none &none &none
&ext_power EP_TOG &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF                         &none &none &none &none &none &none
&none             &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none           &none           &none                                   &none &none &none &none &none &none
&none             &none           &none           &none           &none           &none            &rgb_ug RGB_TOG &none  &none &none &none &none &none &none
                                  &none           &none           &none           &none            &none           &none  &none &none &none &none
            >;
        };
*/

    };
};
